Test_1Neu = acierto.test.teorico.1neu)
dataframe.resultados.1neu <- rbind(dataframe.resultados.1neu, dataframe.pasada)
}
head(dataframe.resultados.1neu[order(dataframe.resultados.1neu$Test_1Neu, decreasing = T), ])
# Como vemos, el mejor resultado lo obtenemos en el entrenamiento #48
# Lo automatizamos y sacamos la matriz de confusión:
conf.1neu[[which.max(dataframe.resultados.1neu$Test_1Neu)]]
set.seed(1)
dataframe.resultados.1neu.soft <- data.frame(Ent_1Neu_soft = numeric(),
Test_1Neu_soft = numeric())
conf.1neu.s <- vector(mode = "list", length = 50)
for(i in 1:50)
{
pacientes.1neu.softmax <- nnet( matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24],
class.ind( matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ),
size=1,
softmax = T,
trace = F)
#Una vez que lo tengo entrenado, lo que voy a hacer es calcular el error tanto en el entrenamiento como en el test de cada uno
pacientes.prediccion.1neu.softmax <- predict( pacientes.1neu.softmax,
matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24],
type="raw" )
head(pacientes.prediccion.1neu.softmax) # Vemos las probabilidades de pertenencia de cada valor
# Ahora que los tengo todos entrenados, Determinamos cual es la máxima, es decir, la clase a la que hay que asignar los objetos
pacientes.prediccion.1neu.class.softmax <- apply( pacientes.prediccion.1neu.softmax, MARGIN=1, FUN='which.is.max')
pacientes.prediccion.1neu.class.softmax
# Lo visualizo en forma de tabla para ir viendo el error
table( pacientes.prediccion.1neu.class.softmax, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] )  # Lo vemos en forma de tabla.
#Calculo el acierto
acierto.ent.teorico.1neu.soft <- sum( diag( table( pacientes.prediccion.1neu.class.softmax, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ) ) )/55 # Esta cuenta nos da el índice de acierto
#TEST
pacientes.prediccion.test.1neu.softmax <- predict( pacientes.1neu.softmax,
matriz.pacientes.datos.centscal[-conjuntoEntrenamiento, 1:24],
type="raw" )
pacientes.prediccion.test.1neu.softmax
pacientes.prediccion.test.1neu.class.softmax <- apply( pacientes.prediccion.test.1neu.softmax, MARGIN=1, FUN='which.is.max')
pacientes.prediccion.test.1neu.class.softmax
conf.1neu.s[[i]] <- table( pacientes.prediccion.test.1neu.class.softmax , matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] )
acierto.test.teorico.1neu.soft <- sum(diag(table(pacientes.prediccion.test.1neu.class.softmax, matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25])))/12
dataframe.pasada <- data.frame(Ent_1Neu_soft = acierto.ent.teorico.1neu.soft,
Test_1Neu_soft = acierto.test.teorico.1neu.soft)
dataframe.resultados.1neu.soft <- rbind(dataframe.resultados.1neu.soft ,dataframe.pasada)
}
head(dataframe.resultados.1neu.soft[order(dataframe.resultados.1neu.soft$Test_1Neu_soft, decreasing = T), ])
# El mejor resultado ha sido en el entrenamiento #27
conf.1neu.s[[27]]
set.seed(1)
dataframe.resultados.2neu <- data.frame(Ent_2Neu = numeric(),
Test_2Neu = numeric())
conf.2neu <- vector(mode = "list", length = 50)
for(i in 1:50)
{
pacientes.2neu <- nnet( matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24],
class.ind( matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ),
size=2,
trace = F )
pacientes.prediccion.2neu <- predict( pacientes.2neu,
matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24],
type="raw" )
head(pacientes.prediccion.2neu) # Vemos las probabilidades de pertenencia de cada valor
pacientes.prediccion.2neu.class <- apply( pacientes.prediccion.2neu, MARGIN=1, FUN='which.is.max')
pacientes.prediccion.2neu.class
table( pacientes.prediccion.2neu.class, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] )  # Lo vemos en forma de tabla.
acierto.teorico.entrenamiento.2neu <- sum( diag( table( pacientes.prediccion.2neu.class, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ) ) )/55 # Esta cuenta nos da el índice de acierto
# TEST
pacientes.prediccion.test.2neu <- predict( pacientes.2neu,
matriz.pacientes.datos.centscal[-conjuntoEntrenamiento, 1:24],
type="raw" )
pacientes.prediccion.test.2neu
pacientes.prediccion.test.2neu.class <- apply( pacientes.prediccion.test.2neu, MARGIN=1, FUN='which.is.max')
pacientes.prediccion.test.2neu.class
conf.2neu[[i]] <- table( pacientes.prediccion.test.2neu.class , matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] )
acierto.teorico.test.2neu <- sum( diag( table( pacientes.prediccion.test.2neu.class, matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] ) ) )/12
dataframe.pasada <- data.frame(Ent_2Neu = acierto.teorico.entrenamiento.2neu,
Test_2neu = acierto.teorico.test.2neu)
dataframe.resultados.2neu <- rbind(dataframe.resultados.2neu, dataframe.pasada)
}
head(dataframe.resultados.2neu[order(dataframe.resultados.2neu$Test_2neu, decreasing = T), ])
# El mejor entrenamiento ha sido en la pasada #9, 18 y 38
conf.2neu[[9]]
conf.2neu[[18]]
conf.2neu[[38]]
set.seed(1)
dataframe.resultados.2neu.soft <- data.frame(Ent_2Neu_soft = numeric(),
Test_2Neu_soft = numeric())
conf.2neu.s <- vector(mode = "list", length = 50)
for(i in 1:50)
{
pacientes.2neu.softmax <- nnet( matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24],
class.ind( matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ),
size=2,
softmax = T,
trace = F )
pacientes.prediccion.ent.2neu.softmax <- predict( pacientes.2neu.softmax,
matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24],
type="raw" )
head(pacientes.prediccion.ent.2neu.softmax)
pacientes.prediccion.ent.2neu.class.softmax <- apply( pacientes.prediccion.ent.2neu.softmax, MARGIN=1, FUN='which.is.max')
pacientes.prediccion.ent.2neu.class.softmax
table( pacientes.prediccion.ent.2neu.class.softmax , matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] )
acierto.teorico.ent.2neu.softmax <- sum( diag( table( pacientes.prediccion.ent.2neu.class.softmax, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ) ) )/55
# TEST
pacientes.prediccion.test.2neu.softmax <- predict( pacientes.2neu.softmax,
matriz.pacientes.datos.centscal[-conjuntoEntrenamiento, 1:24],
type="raw" )
pacientes.prediccion.test.2neu.softmax
pacientes.prediccion.test.2neu.class.softmax <- apply( pacientes.prediccion.test.2neu.softmax, MARGIN=1, FUN='which.is.max')
pacientes.prediccion.test.2neu.class.softmax
conf.2neu.s[[i]] <- table( pacientes.prediccion.test.2neu.class.softmax , matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] )
acierto.teorico.test.2neu.softmax <- sum(diag(table(pacientes.prediccion.test.2neu.class.softmax, matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] ) ) )/12
dataframe.pasada <- data.frame(Ent_2Neu_soft = acierto.teorico.ent.2neu.softmax,
Test_2neu_soft = acierto.teorico.test.2neu.softmax)
dataframe.resultados.2neu.soft <- rbind(dataframe.resultados.2neu.soft, dataframe.pasada)
}
head(dataframe.resultados.2neu.soft[order(dataframe.resultados.2neu.soft$Test_2neu_soft, decreasing = T), ])
# El mejor entrenamiento ha sido en la pasada 9, 10...
conf.2neu.s[[9]]
conf.2neu.s[[10]]
set.seed(1)
dataframe.resultados.3neu <- data.frame(Ent_3Neu = numeric(),
Test_3Neu = numeric())
conf.3neu <- vector(mode = "list", length = 50)
for(i in 1:50)
{
pacientes.3neu <- nnet( matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24],
class.ind( matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ),
size=3,
trace = F)
pacientes.prediccion.3neu <- predict( pacientes.3neu, matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24], type="raw" )
head(pacientes.prediccion.3neu) # Vemos las probabilidades de pertenencia de cada valor
pacientes.prediccion.3neu.class <- apply( pacientes.prediccion.3neu, MARGIN=1, FUN='which.is.max')
pacientes.prediccion.3neu.class
table( pacientes.prediccion.3neu.class, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] )  # Lo vemos en forma de tabla.
acierto.teorico.entrenamiento.3neu <- sum( diag( table( pacientes.prediccion.3neu.class, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ) ) )/55 # Esta cuenta nos da el índice de acierto
# TEST
pacientes.prediccion.test.3neu <- predict( pacientes.3neu, matriz.pacientes.datos.centscal[-conjuntoEntrenamiento, 1:24], type="raw" )
pacientes.prediccion.test.3neu
pacientes.prediccion.test.3neu.class <- apply( pacientes.prediccion.test.3neu, MARGIN=1, FUN='which.is.max')
pacientes.prediccion.test.3neu.class
conf.3neu[[i]] <- table( pacientes.prediccion.test.3neu.class , matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] )
acierto.teorico.test.3neu <- sum( diag( table( pacientes.prediccion.test.3neu.class, matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] ) ) )/12
dataframe.pasada <- data.frame(Ent_3Neu = acierto.teorico.entrenamiento.3neu,
Test_3neu = acierto.teorico.test.3neu)
dataframe.resultados.3neu <- rbind(dataframe.resultados.3neu, dataframe.pasada)
}
head(dataframe.resultados.3neu[order(dataframe.resultados.3neu$Test_3neu, decreasing = T), ])
# El mejor entrenamiento ha sido en la pasada 44
conf.3neu[[44]]
set.seed(1)
dataframe.resultados.3neu.soft <- data.frame(Ent_3Neu_soft = numeric(),
Test_3Neu_soft = numeric())
conf.3neu.s <- vector(mode = "list", length = 50)
for(i in 1:50)
{
pacientes.3neu.softmax <- nnet( matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24],
class.ind( matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ),
size=3,
softmax = T,
trace = F)
pacientes.prediccion.3neu.softmax <- predict( pacientes.3neu.softmax, matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24], type="raw" )
head(pacientes.prediccion.3neu.softmax) # Vemos las probabilidades de pertenencia de cada valor
pacientes.prediccion.3neu.class.softmax <- apply(pacientes.prediccion.3neu.softmax, MARGIN=1, FUN='which.is.max')
pacientes.prediccion.3neu.class.softmax
table( pacientes.prediccion.3neu.class.softmax, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] )  # Lo vemos en forma de tabla.
acierto.teorico.ent.3neu.softmax <- sum( diag( table( pacientes.prediccion.3neu.class.softmax, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ) ) )/55 # Esta cuenta nos da el índice de acierto
#TEST
pacientes.prediccion.test.3neu.softmax <- predict( pacientes.3neu.softmax, matriz.pacientes.datos.centscal[-conjuntoEntrenamiento, 1:24], type="raw" )
pacientes.prediccion.test.3neu.softmax
pacientes.prediccion.test.3neu.class.softmax <- apply( pacientes.prediccion.test.3neu.softmax, MARGIN=1, FUN='which.is.max')
pacientes.prediccion.test.3neu.class.softmax
conf.3neu.s[[i]] <- table( pacientes.prediccion.test.3neu.class.softmax , matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] )
acierto.teorico.test.3neu.softmax <- sum( diag( table( pacientes.prediccion.test.3neu.class.softmax, matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] ) ) )/12
dataframe.pasada <- data.frame(Ent_3Neu_soft = acierto.teorico.ent.3neu.softmax,
Test_3neu_soft = acierto.teorico.test.3neu.softmax)
dataframe.resultados.3neu.soft <- rbind(dataframe.resultados.3neu.soft, dataframe.pasada)
}
head(dataframe.resultados.3neu.soft[order(dataframe.resultados.3neu.soft$Test_3neu_soft, decreasing = T), ])
# El mejor entrenamieno ha sido en la pasada 13, 38, 39, 48
conf.3neu.s[[13]]
conf.3neu.s[[38]]
conf.3neu.s[[39]]
conf.3neu.s[[48]]
set.seed(1)
dataframe.resultados.3neu.decay <- data.frame(Ent_3Neu_decay = numeric(),
Test_3Neu_decay = numeric())
conf.3neu.d <- vector(mode = "list", length = 50)
for(i in 1:50)
{
pacientes.3neu.decay <- nnet( matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24],
class.ind( matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ),
size=3,
decay = 0.2,
trace = F)
pacientes.prediccion.3neu.decay <- predict( pacientes.3neu.decay, matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24], type="raw" )
head(pacientes.prediccion.3neu.decay) # Vemos las probabilidades de pertenencia de cada valor
pacientes.prediccion.3neu.class.decay <- apply( pacientes.prediccion.3neu.decay, MARGIN=1, FUN='which.is.max')
pacientes.prediccion.3neu.class.decay
table( pacientes.prediccion.3neu.class.decay, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] )  # Lo vemos en forma de tabla.
acierto.teorico.ent.3neu.decay <- sum( diag( table( pacientes.prediccion.3neu.class.decay, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ) ) )/55 # Esta cuenta nos da el índice de acierto
#TEST
pacientes.prediccion.test.3neu.decay <- predict( pacientes.3neu.decay, matriz.pacientes.datos.centscal[-conjuntoEntrenamiento, 1:24], type="raw" )
pacientes.prediccion.test.3neu.decay
pacientes.prediccion.test.3neu.class.decay <- apply( pacientes.prediccion.test.3neu.decay, MARGIN=1, FUN='which.is.max')
pacientes.prediccion.test.3neu.class.decay
conf.3neu.d[[i]] <- table( pacientes.prediccion.test.3neu.class.decay , matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] )
acierto.teorico.test.3neu.decay <- sum( diag( table( pacientes.prediccion.test.3neu.class.decay, matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] ) ) )/12
dataframe.pasada <- data.frame(Ent_3Neu_decay = acierto.teorico.ent.3neu.decay,
Test_3neu_decay = acierto.teorico.test.3neu.decay)
dataframe.resultados.3neu.decay <- rbind(dataframe.resultados.3neu.decay, dataframe.pasada)
}
head(dataframe.resultados.3neu.decay[order(dataframe.resultados.3neu.decay$Test_3neu_decay, decreasing = T), ])
# El mejor entenamiento ha sido en la pasada 7, 29, 36
conf.3neu.d[[7]]
conf.3neu.d[[29]]
conf.3neu.d[[36]]
set.seed(1)
dataframe.resultados.3neu.decay.softmax <- data.frame(Ent_3Neu_decay_sf = numeric(),
Test_3Neu_decay_sf = numeric())
conf.3neu.d.s <- vector(mode = "list", length = 50)
for(i in 1:50)
{
pacientes.3neu.decay.softmax <- nnet( matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24],
class.ind( matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ),
size=3,
softmax = T,
decay = 0.03,
trace = F)
pacientes.prediccion.3neu.decay.softmax <- predict( pacientes.3neu.decay.softmax, matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24], type="raw" )
head(pacientes.prediccion.3neu.decay.softmax) # Vemos las probabilidades de pertenencia de cada valor
pacientes.prediccion.3neu.class.decay.softmax <- apply( pacientes.prediccion.3neu.decay.softmax, MARGIN=1, FUN='which.is.max')
pacientes.prediccion.3neu.class.decay.softmax
table( pacientes.prediccion.3neu.class.decay.softmax, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] )  # Lo vemos en forma de tabla.
acierto.teorico.ent.3neu.decay.sf <- sum( diag( table( pacientes.prediccion.3neu.class.decay.softmax, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ) ) )/55 # Esta cuenta nos da el índice de acierto
# TEST
pacientes.prediccion.test.3neu.decay.softmax <- predict( pacientes.3neu.decay.softmax, matriz.pacientes.datos.centscal[-conjuntoEntrenamiento, 1:24], type="raw" )
pacientes.prediccion.test.3neu.decay.softmax
pacientes.prediccion.test.3neu.class.decay.softmax <- apply( pacientes.prediccion.test.3neu.decay.softmax, MARGIN=1, FUN='which.is.max')
pacientes.prediccion.test.3neu.class.decay.softmax
conf.3neu.d.s[[i]] <- table( pacientes.prediccion.test.3neu.class.decay.softmax , matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] )
acierto.teorico.test.3neu.decay.sf <- sum( diag( table( pacientes.prediccion.test.3neu.class.decay.softmax, matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] ) ) )/12
dataframe.pasada <- data.frame(Ent_3Neu_decay_sf = acierto.teorico.ent.3neu.decay.sf,
Test_3neu_decay_sf = acierto.teorico.test.3neu.decay.sf)
dataframe.resultados.3neu.decay.softmax <- rbind(dataframe.resultados.3neu.decay.softmax, dataframe.pasada)
}
head(dataframe.resultados.3neu.decay.softmax[order(dataframe.resultados.3neu.decay.softmax$Test_3neu_decay_sf, decreasing = T), ])
# El mejor entrenamiento ha sido en la pasada 33
conf.3neu.d.s[[33]]
set.seed(1)
dataframe.resultados.5neu <- data.frame(Ent_5Neu = numeric(),
Test_5Neu = numeric())
conf.5neu <- vector(mode = "list", length = 50)
for(i in 1:50)
{
pacientes.5neu <- nnet( matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24],
class.ind( matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ),
size=5,
trace = F )
pacientes.prediccion.5neu <- predict( pacientes.5neu, matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24], type="raw" )
head(pacientes.prediccion.5neu) # Vemos las probabilidades de pertenencia de cada valor
pacientes.prediccion.5neu.class <- apply( pacientes.prediccion.5neu, MARGIN=1, FUN='which.is.max')
pacientes.prediccion.5neu.class
table( pacientes.prediccion.5neu.class, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] )  # Lo vemos en forma de tabla.
acierto.teorico.entrenamiento.5neu <- sum( diag( table( pacientes.prediccion.5neu.class, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ) ) )/55 # Esta cuenta nos da el índice de acierto
#TEST
pacientes.prediccion.test.5neu <- predict( pacientes.5neu, matriz.pacientes.datos.centscal[-conjuntoEntrenamiento, 1:24], type="raw" )
pacientes.prediccion.test.5neu
pacientes.prediccion.test.5neu.class <- apply( pacientes.prediccion.test.5neu, MARGIN=1, FUN='which.is.max')
pacientes.prediccion.test.5neu.class
conf.5neu[[i]] <- table( pacientes.prediccion.test.5neu.class , matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] )
acierto.teorico.test.5neu <- sum( diag( table( pacientes.prediccion.test.5neu.class, matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] ) ) )/12
dataframe.pasada <- data.frame(Ent_5Neu = acierto.teorico.entrenamiento.5neu,
Test_5neu = acierto.teorico.test.5neu)
dataframe.resultados.5neu <- rbind(dataframe.resultados.5neu, dataframe.pasada)
}
head(dataframe.resultados.5neu[order(dataframe.resultados.5neu$Test_5neu, decreasing = T), ])
# El mejor entrenamiento ha sido en la pasada 4 y 35
conf.5neu[[4]]
conf.5neu[[35]]
set.seed(1)
dataframe.resultados.5neu.soft <- data.frame(Ent_5Neu_soft = numeric(),
Test_5Neu_soft = numeric())
conf.5neu.s <- vector(mode = "list", length = 50)
for(i in 1:50)
{
pacientes.5neu.softmax <- nnet( matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24],
class.ind( matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ),
size=5,
softmax = T,
trace = F )
pacientes.prediccion.5neu.softmax <- predict( pacientes.5neu.softmax, matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24], type="raw" )
head(pacientes.prediccion.5neu.softmax) # Vemos las probabilidades de pertenencia de cada valor
pacientes.prediccion.5neu.class.softmax <- apply( pacientes.prediccion.5neu.softmax, MARGIN=1, FUN='which.is.max')
pacientes.prediccion.5neu.class.softmax
table( pacientes.prediccion.5neu.class.softmax, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] )  # Lo vemos en forma de tabla.
acierto.teorico.ent.5neu.softmax <- sum( diag( table( pacientes.prediccion.5neu.class.softmax, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ) ) )/55 # Esta cuenta nos da el índice de acierto
# TEST
pacientes.prediccion.test.5neu.softmax <- predict( pacientes.5neu.softmax, matriz.pacientes.datos.centscal[-conjuntoEntrenamiento, 1:24], type="raw" )
pacientes.prediccion.test.5neu.softmax
pacientes.prediccion.test.5neu.class.softmax <- apply( pacientes.prediccion.test.5neu.softmax, MARGIN=1, FUN='which.is.max')
pacientes.prediccion.test.5neu.class.softmax
conf.5neu.s[[i]] <-table( pacientes.prediccion.test.5neu.class.softmax, matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] )
acierto.teorico.test.5neu.softmax <- sum( diag( table( pacientes.prediccion.test.5neu.class.softmax, matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] ) ) )/12
dataframe.pasada <- data.frame(Ent_5Neu_soft = acierto.teorico.ent.5neu.softmax,
Test_5neu_soft = acierto.teorico.test.5neu.softmax)
dataframe.resultados.5neu.soft <- rbind(dataframe.resultados.5neu.soft, dataframe.pasada)
}
head(dataframe.resultados.5neu.soft[order(dataframe.resultados.5neu.soft$Test_5neu_soft, decreasing = T), ])
# El mejor entrenamiento ha sido en la pasada 39
conf.5neu.s[[39]]
set.seed(1)
dataframe.resultados.5neu.decay <- data.frame(Ent_5Neu_decay = numeric(),
Test_5Neu_decay = numeric())
conf.5neu.d <- vector(mode = "list", length = 50)
for(i in 1:50)
{
pacientes.5neu.decay <- nnet( matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24],
class.ind( matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ),
size=5,
decay=0.1,
trace = F)
pacientes.prediccion.5neu.decay <- predict( pacientes.5neu.decay, matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24], type="raw" )
head(pacientes.prediccion.5neu.decay) # Vemos las probabilidades de pertenencia de cada valor
pacientes.prediccion.5neu.decay.class <- apply( pacientes.prediccion.5neu.decay, MARGIN=1, FUN='which.is.max')
pacientes.prediccion.5neu.decay.class
table( pacientes.prediccion.5neu.decay.class, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] )  # Lo vemos en forma de tabla.
acierto.teorico.ent.5neu.decay <- sum( diag( table( pacientes.prediccion.5neu.decay.class, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ) ) )/55 # Esta cuenta nos da el índice de acierto
# TEST
pacientes.prediccion.test.decay.5neu <- predict( pacientes.5neu.decay, matriz.pacientes.datos.centscal[-conjuntoEntrenamiento, 1:24], type="raw" )
pacientes.prediccion.test.decay.5neu
pacientes.prediccion.test.decay.5neu.class <- apply( pacientes.prediccion.test.decay.5neu, MARGIN=1, FUN='which.is.max')
pacientes.prediccion.test.decay.5neu.class
conf.5neu.d[[i]] <- table( pacientes.prediccion.test.decay.5neu.class , matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] )
acierto.teorico.test.5neu.decay <- sum( diag( table( pacientes.prediccion.test.decay.5neu.class, matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] ) ) )/12
dataframe.pasada <- data.frame(Ent_5Neu_decay = acierto.teorico.ent.5neu.decay,
Test_5neu_decay = acierto.teorico.test.5neu.decay)
dataframe.resultados.5neu.decay <- rbind(dataframe.resultados.5neu.decay, dataframe.pasada)
}
head(dataframe.resultados.5neu.decay[order(dataframe.resultados.5neu.decay$Test_5neu_decay, decreasing = T), ])
# El mejor entrenamiento ha sido en la pasada # 3
conf.5neu.d[[3]]
set.seed(1)
dataframe.resultados.5neu.decay.softmax <- data.frame(Ent_5Neu_decay_sf = numeric(),
Test_5Neu_decay_sf = numeric())
conf.5neu.d.s <- vector(mode = "list", length = 50)
for(i in 1:50)
{
pacientes.5neu.decay.softmax <- nnet( matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24],
class.ind( matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ) ,
size=5,
softmax = T,
decay = 0.05,
trace = F)
pacientes.prediccion.5neu.decay.softmax <- predict( pacientes.5neu.decay.softmax, matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24], type="raw" )
head(pacientes.prediccion.5neu.decay.softmax) # Vemos las probabilidades de pertenencia de cada valor
pacientes.prediccion.5neu.decay.class.softmax <- apply( pacientes.prediccion.5neu.decay.softmax, MARGIN=1, FUN='which.is.max')
pacientes.prediccion.5neu.decay.class.softmax
table( pacientes.prediccion.5neu.decay.class.softmax, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] )  # Lo vemos en forma de tabla.
acierto.teorico.ent.5neu.decay.sf <- sum( diag( table( pacientes.prediccion.5neu.decay.class.softmax, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ) ) )/55 # Esta cuenta nos da el índice de acierto
# TEST
pacientes.prediccion.test.decay.5neu.softmax <- predict( pacientes.5neu.decay.softmax, matriz.pacientes.datos.centscal[-conjuntoEntrenamiento, 1:24], type="raw" )
pacientes.prediccion.test.decay.5neu.softmax
pacientes.prediccion.test.decay.5neu.class.softmax <- apply( pacientes.prediccion.test.decay.5neu.softmax, MARGIN=1, FUN='which.is.max')
pacientes.prediccion.test.decay.5neu.class.softmax
conf.5neu.d.s[[i]] <- table( pacientes.prediccion.test.decay.5neu.class.softmax , matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] )
acierto.teorico.test.5neu.decay.sf <- sum( diag( table( pacientes.prediccion.test.decay.5neu.class.softmax, matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] ) ) )/12
dataframe.pasada <- data.frame(Ent_5Neu_decay_sf = acierto.teorico.ent.5neu.decay.sf,
Test_5neu_decay_sf = acierto.teorico.test.5neu.decay.sf)
dataframe.resultados.5neu.decay.softmax <- rbind(dataframe.resultados.5neu.decay.softmax, dataframe.pasada)
}
head(dataframe.resultados.5neu.decay.softmax[order(dataframe.resultados.5neu.decay.softmax$Test_5neu_decay_sf, decreasing = T), ])
# El mejor entrenamiento ha sido en la pasada 12, 25, 27
conf.5neu.d.s[[12]]
conf.5neu.d.s[[25]]
conf.5neu.d.s[[27]]
dataframe.resultados.perceptron <- cbind(dataframe.resultados.1neu,
dataframe.resultados.1neu.soft,
dataframe.resultados.2neu,
dataframe.resultados.2neu.soft,
dataframe.resultados.3neu,
dataframe.resultados.3neu.soft,
dataframe.resultados.3neu.decay,
dataframe.resultados.3neu.decay.softmax,
dataframe.resultados.5neu,
dataframe.resultados.5neu.soft,
dataframe.resultados.5neu.decay,
dataframe.resultados.5neu.decay.softmax)
remove(dataframe.resultados.1neu)
remove(dataframe.resultados.1neu.soft)
remove(dataframe.resultados.2neu)
remove(dataframe.resultados.2neu.soft)
remove(dataframe.resultados.3neu)
remove(dataframe.resultados.3neu.soft)
remove(dataframe.resultados.3neu.decay)
remove(dataframe.resultados.3neu.decay.softmax)
remove(dataframe.resultados.5neu)
remove(dataframe.resultados.5neu.soft)
remove(dataframe.resultados.5neu.decay)
remove(dataframe.resultados.5neu.decay.softmax)
# Obtenemos los máximos de cada columna de test y guardamos:
max.1neu <- max(dataframe.resultados.perceptron[, 2])
max.1neu.s <- max(dataframe.resultados.perceptron[, 4])
max.2neu <- max(dataframe.resultados.perceptron[, 6])
max.2neu.s <- max(dataframe.resultados.perceptron[, 8])
max.3neu <- max(dataframe.resultados.perceptron[, 10])
max.3neu.s <- max(dataframe.resultados.perceptron[, 12])
max.3neu.d <- max(dataframe.resultados.perceptron[, 14])
max.3neu.d.s <- max(dataframe.resultados.perceptron[, 16])
max.5neu <- max(dataframe.resultados.perceptron[, 18])
max.5neu.s <- max(dataframe.resultados.perceptron[, 20])
max.5neu.d <- max(dataframe.resultados.perceptron[, 22])
max.5neu.d.s <- max(dataframe.resultados.perceptron[, 24])
array.maximos.perceptron <- c(max.1neu,
max.1neu.s,
max.2neu,
max.2neu.s,
max.3neu,
max.3neu.s,
max.3neu.d,
max.3neu.d.s,
max.5neu,
max.5neu.s,
max.5neu.d,
max.5neu.d.s)
barplot(array.maximos.perceptron,
main = "Mejores Resultados en Test con Perceptrones",
xlab = "Tipo de Perceptrón",
ylab = "Acierto (Tanto por 1)",
names.arg = c("1 Neu", "1 Neu Soft",
"2 Neu", "2 Neu Soft",
"3 Neu", "3 Neu Soft", "3 Neu Decay", "3 Neu Soft Decay",
"5 Neu", "5 Neu Soft", "5 Neu Decay", "5 Neu Soft Decay")
)
pdf("Imágenes Obtenidas/BarplotResultadosPerceptron.pdf")
barplot(array.maximos.perceptron,
main = "Mejores Resultados en Test con Perceptrones",
xlab = "Tipo de Perceptrón",
ylab = "Acierto (Tanto por 1)",
names.arg = c("1 Neu", "1 Neu Soft",
"2 Neu", "2 Neu Soft",
"3 Neu", "3 Neu Soft", "3 Neu Decay", "3 Neu Soft Decay",
"5 Neu", "5 Neu Soft", "5 Neu Decay", "5 Neu Soft Decay")
)
dev.off
dataset.resultados <- read.csv2("Datos/Resultados.txt")
plot(dataset, labels = NULL, hang = 0.1, main = "Cluster dendrogram", sub = NULL, xlab = NULL, ylab = "Height", ...)
plot(dataset, labels = NULL, hang = 0.1, main = "Cluster dendrogram", sub = NULL, xlab = NULL, ylab = "Height")
plot(dataset, labels = NULL, hang = 0.1, main = "Cluster dendrogram", sub = NULL, xlab = "hola", ylab = "Height")
plot(dataset, labels = NULL, hang = 0.1, main = "Cluster dendrogram", sub = NULL, xlab = "hola", ylab = "Height")
plot(dataset, labels = NULL, hang = 0.1, main = "Cluster dendrogram", sub = NULL, xlab = "hola", ylab = "Height")
plot(matriz.pacientes.datos.centscal, labels = NULL, hang = 0.1, main = "Cluster dendrogram", sub = NULL, xlab = "hola", ylab = "Height")
plot(matriz.pacientes.datos.centscal, labels = NULL, hang = 0.1, main = "Cluster dendrogram", sub = NULL)
hc = plot(matriz.pacientes.datos.centscal, labels = NULL, hang = 0.1, main = "Cluster dendrogram", sub = NULL)
hc = plot.hclust(matriz.pacientes.datos.centscal, labels = NULL, hang = 0.1, main = "Cluster dendrogram", sub = NULL)
hc = plot.dendrogram(matriz.pacientes.datos.centscal, labels = NULL, hang = 0.1, main = "Cluster dendrogram", sub = NULL)
library("plot")
install.packages("hclust")
hclust(matriz.pacientes.datos.centscal)
hclust(dataset)
isna(dataset)
is.na(dataset)
hclust(dataset)
View(dataset)
View(dataset)
hclust(matriz.pacientes.datos)
matriz.pacientes.datos
View(matriz.pacientes.datos)
View(matriz.pacientes.datos)
hclust(mode(matriz.pacientes.datos) <- "integer")
matriz.dendrograma = class(matriz.pacientes.datos) <- "integer"
matriz.dendrograma = lapply(matriz.pacientes.datos, as.numeric)
hclust(matriz.dendrograma)
hc = plot.dendrogram(matriz.dendrograma, labels = NULL, hang = 0.1, main = "Cluster dendrogram", sub = NULL)
matriz.dendrograma
require("Graphics")
require("graphics")
require("utils")
hc = plot.dendrogram(matriz.dendrograma, labels = NULL, hang = 0.1, main = "Cluster dendrogram", sub = NULL)
require("stats")
hc = plot.dendrogram(matriz.dendrograma, labels = NULL, hang = 0.1, main = "Cluster dendrogram", sub = NULL)
plot(matriz.dendrograma)
hclust(matriz.dendrograma)
hclust(matriz.dendrograma, method = "complete", members = NULL)
hclust(dist(matriz.dendrograma), method = "complete", members = NULL)
hclust(dist(as.matrix(matriz.dendrograma), method = "complete", members = NULL)
hclust(dist(as.matrix(matriz.dendrograma)), method = "complete", members = NULL)
matriz.dendrograma = lapply(matriz.pacientes.datos, as.numeric)
hclust(dist(as.matrix(matriz.dendrograma)), method = "complete", members = NULL)
hclust(dist(as.matrix(unlist(matriz.dendrograma))), method = "complete", members = NULL)
matriz.dendrograma = lapply(matriz.pacientes.datos, as.numeric)
plot(hclust(dist(as.matrix(unlist(matriz.dendrograma))), method = "complete", members = NULL))
plot(hclust(dist(as.matrix(unlist(matriz.dendrograma))), members = NULL))
plot(hclust(dist(as.matrix(unlist(matriz.dendrograma)))))
plot(hclust(dist(as.matrix(unlist(matriz.dendrograma))), "ave"))
plot(hclust(dist(as.matrix(unlist(matriz.dendrograma))) ))
fviz_dend(hclust(dist(as.matrix(unlist(matriz.dendrograma))) ), cex = 0.5, k = 4, color_labels_by_k = TRUE)
fviz_dend(hclust(dist(as.matrix(unlist(matriz.dendrograma))) ), cex = 0.5, k = 4, color_labels_by_k = TRUE)
fviz_dend(hclust(dist(as.matrix(unlist(matriz.dendrograma))) ))
dendrograma = hclust(dist(as.matrix(unlist(matriz.dendrograma))) )
plot(dendrograma)
fviz_dend(dendrograma)
fviz_dend(dendrograma)
options(expressions=10000)
nodeHeights(dendrograma)
plot(dendrograma)
fviz_dend(dendrograma)
plot(dendrograma)
par(mar=c(3,1,1,5))
plot(dendrograma)
par(mar=c(10,1,1,5))
plot(dendrograma)
par(mar=c(3,1,10,50))
plot(dendrograma)
