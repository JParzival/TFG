"0","set.seed(1)"
"0","dataframe.resultados.1neu.soft <- data.frame(Ent_1Neu_soft = numeric(),"
"0","                                             Test_1Neu_soft = numeric())"
"0","for(i in 1:20)"
"0","{"
"0","  pacientes.1neu.softmax <- nnet( matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24], class.ind( matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ) , size=1, softmax = T )"
"0","  #Una vez que lo tengo entrenado, lo que voy a hacer es calcular el error tanto en el entrenamiento como en el test de cada uno"
"0","  "
"0","  pacientes.prediccion.1neu.softmax <- predict( pacientes.1neu.softmax, matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24], type=""raw"" )"
"0","  head(pacientes.prediccion.1neu.softmax) # Vemos las probabilidades de pertenencia de cada valor"
"0","  "
"0","  # Ahora que los tengo todos entrenados, Determinamos cual es la máxima, es decir, la clase a la que hay que asignar los objetos"
"0","  "
"0","  pacientes.prediccion.1neu.class.softmax <- apply( pacientes.prediccion.1neu.softmax, MARGIN=1, FUN='which.is.max')"
"0","  pacientes.prediccion.1neu.class.softmax"
"0","  "
"0","  # Lo visualizo en forma de tabla para ir viendo el error"
"0","  "
"0","  table( pacientes.prediccion.1neu.class.softmax, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] )  # Lo vemos en forma de tabla."
"0","  "
"0","  #Calculo el acierto"
"0","  "
"0","  acierto.ent.teorico.1neu.soft <- sum( diag( table( pacientes.prediccion.1neu.class.softmax, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ) ) )/55 # Esta cuenta nos da el índice de acierto"
"0","  "
"0","  #TEST"
"0","  "
"0","  pacientes.prediccion.test.1neu.softmax <- predict( pacientes.1neu.softmax, matriz.pacientes.datos.centscal[-conjuntoEntrenamiento, 1:24], type=""raw"" )"
"0","  pacientes.prediccion.test.1neu.softmax"
"0","  "
"0","  pacientes.prediccion.test.1neu.class.softmax <- apply( pacientes.prediccion.test.1neu.softmax, MARGIN=1, FUN='which.is.max')"
"0","  pacientes.prediccion.test.1neu.class.softmax"
"0","  "
"0","  table( pacientes.prediccion.test.1neu.class.softmax , matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] )"
"0","  acierto.test.teorico.1neu.soft <- sum( diag( table( pacientes.prediccion.test.1neu.class.softmax, matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] ) ) )/12"
"0","  "
"0","  dataframe.pasada <- data.frame(Ent_1Neu_soft = acierto.ent.teorico.1neu.soft,"
"0","                                 Test_1Neu_soft = acierto.test.teorico.1neu.soft)"
"0","  "
"0","  dataframe.resultados.1neu.soft <- rbind(dataframe.resultados.1neu.soft ,dataframe.pasada)"
"0","  "
"0","}"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 74.680980 
"
"1","iter  10 value 54.121965
"
"1","iter  20 value 48.236588
"
"1","iter  30 value 46.601848
"
"1","iter  40 value 45.662839
"
"1","iter  50 value 45.100161
"
"1","iter  60 value 45.013970
"
"1","iter  70 value 44.893415
"
"1","iter  80 value 44.371580
"
"1","iter  90 value 44.332689
"
"1","iter 100 value 44.295558
"
"1","final  value 44.295558 
"
"1","stopped after 100 iterations
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 71.012916 
"
"1","iter  10 value 58.921735
"
"1","iter  20 value 52.421956
"
"1","iter  30 value 51.249978
"
"1","iter  40 value 51.062921
"
"1","iter  50 value 51.041230
"
"1","iter  60 value 51.036000
"
"1","iter  70 value 51.033725
"
"1","iter  80 value 51.033556
"
"1","final  value 51.033526 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 76.089260 
"
"1","iter  10 value 54.927290
"
"1","iter  20 value 49.426036
"
"1","iter  30 value 47.623782
"
"1","iter  40 value 47.250276
"
"1","iter  50 value 47.209202
"
"1","iter  60 value 47.203898
"
"1","iter  70 value 47.203403
"
"1","iter  80 value 47.203339
"
"1","final  value 47.203233 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 77.821148 
"
"1","iter  10 value 56.398196
"
"1","iter  20 value 52.471754
"
"1","iter  30 value 51.403279
"
"1","iter  40 value 51.142730
"
"1","iter  50 value 51.112794
"
"1","iter  60 value 51.108916
"
"1","iter  70 value 51.108602
"
"1","iter  80 value 51.108420
"
"1","final  value 51.108355 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 98.897261 
"
"1","iter  10 value 56.384034
"
"1","iter  20 value 48.402796
"
"1","iter  30 value 45.348940
"
"1","iter  40 value 44.304252
"
"1","iter  50 value 44.186427
"
"1","iter  60 value 44.169559
"
"1","iter  70 value 44.166001
"
"1","final  value 44.165983 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 76.243068 
"
"1","iter  10 value 51.096421
"
"1","iter  20 value 44.909371
"
"1","iter  30 value 43.723489
"
"1","iter  40 value 43.231707
"
"1","iter  50 value 43.191046
"
"1","iter  60 value 43.129159
"
"1","iter  70 value 43.107205
"
"1","final  value 43.106536 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 79.741119 
"
"1","iter  10 value 58.042386
"
"1","iter  20 value 52.958299
"
"1","iter  30 value 52.339383
"
"1","iter  40 value 52.056617
"
"1","iter  50 value 51.990883
"
"1","iter  60 value 51.980043
"
"1","iter  70 value 51.978126
"
"1","iter  80 value 51.977778
"
"1","final  value 51.977776 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 75.113104 
"
"1","iter  10 value 52.087356
"
"1","iter  20 value 46.007693
"
"1","iter  30 value 44.822816
"
"1","iter  40 value 44.562432
"
"1","iter  50 value 43.756475
"
"1","iter  60 value 43.463884
"
"1","iter  70 value 43.303679
"
"1","iter  80 value 42.858048
"
"1","iter  90 value 42.663566
"
"1","iter 100 value 42.627306
"
"1","final  value 42.627306 
"
"1","stopped after 100 iterations
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 75.765468 
"
"1","iter  10 value 52.274388
"
"1","iter  20 value 48.998760
"
"1","iter  30 value 45.470715
"
"1","iter  40 value 44.605415
"
"1","iter  50 value 44.097776
"
"1","iter  60 value 44.004386
"
"1","iter  70 value 43.993537
"
"1","iter  80 value 43.991798
"
"1","final  value 43.991717 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 73.396916 
"
"1","iter  10 value 53.155950
"
"1","iter  20 value 47.925134
"
"1","iter  30 value 45.286095
"
"1","iter  40 value 44.581253
"
"1","iter  50 value 43.909739
"
"1","iter  60 value 42.997536
"
"1","iter  70 value 42.588562
"
"1","iter  80 value 42.520937
"
"1","iter  90 value 42.463167
"
"1","iter 100 value 42.334379
"
"1","final  value 42.334379 
"
"1","stopped after 100 iterations
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 77.595231 
"
"1","iter  10 value 55.565649
"
"1","iter  20 value 48.201335
"
"1","iter  30 value 44.681102
"
"1","iter  40 value 43.682087
"
"1","iter  50 value 43.540370
"
"1","iter  60 value 43.512035
"
"1","iter  70 value 43.503231
"
"1","iter  80 value 43.502181
"
"1","iter  90 value 43.501818
"
"1","iter 100 value 43.501756
"
"1","final  value 43.501756 
"
"1","stopped after 100 iterations
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 92.973096 
"
"1","iter  10 value 53.000691
"
"1","iter  20 value 48.011818
"
"1","iter  30 value 47.780175
"
"1","iter  40 value 47.625608
"
"1","iter  50 value 47.617084
"
"1","iter  60 value 47.616523
"
"1","final  value 47.616519 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 95.671697 
"
"1","iter  10 value 57.565091
"
"1","iter  20 value 55.020362
"
"1","iter  30 value 54.558023
"
"1","iter  40 value 54.450421
"
"1","iter  50 value 54.437449
"
"1","iter  60 value 54.435586
"
"1","final  value 54.435527 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 70.488853 
"
"1","iter  10 value 49.524180
"
"1","iter  20 value 47.734980
"
"1","iter  30 value 47.623850
"
"1","iter  40 value 47.616679
"
"1","iter  50 value 47.616522
"
"1","final  value 47.616519 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 95.172426 
"
"1","iter  10 value 58.505622
"
"1","iter  20 value 50.935653
"
"1","iter  30 value 50.445031
"
"1","iter  40 value 50.432706
"
"1","iter  50 value 50.432304
"
"1","final  value 50.432298 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 93.091045 
"
"1","iter  10 value 53.383425
"
"1","iter  20 value 49.563316
"
"1","iter  30 value 47.953606
"
"1","iter  40 value 47.756176
"
"1","iter  50 value 47.732302
"
"1","iter  60 value 47.729192
"
"1","iter  70 value 47.728887
"
"1","final  value 47.728860 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 93.509404 
"
"1","iter  10 value 55.559652
"
"1","iter  20 value 48.853316
"
"1","iter  30 value 45.399904
"
"1","iter  40 value 44.229916
"
"1","iter  50 value 43.545031
"
"1","iter  60 value 43.414818
"
"1","iter  70 value 43.386391
"
"1","iter  80 value 43.385567
"
"1","final  value 43.385558 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 76.937474 
"
"1","iter  10 value 53.818236
"
"1","iter  20 value 48.349668
"
"1","iter  30 value 46.936290
"
"1","iter  40 value 45.203069
"
"1","iter  50 value 44.993997
"
"1","iter  60 value 44.966645
"
"1","iter  70 value 44.960256
"
"1","iter  80 value 44.959471
"
"1","final  value 44.959421 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 77.982035 
"
"1","iter  10 value 53.118372
"
"1","iter  20 value 47.265013
"
"1","iter  30 value 44.782782
"
"1","iter  40 value 44.122286
"
"1","iter  50 value 43.985347
"
"1","iter  60 value 43.948410
"
"1","iter  70 value 43.942764
"
"1","iter  80 value 43.941472
"
"1","final  value 43.941341 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 82.640446 
"
"1","iter  10 value 50.327850
"
"1","iter  20 value 43.230991
"
"1","iter  30 value 42.184946
"
"1","iter  40 value 42.014115
"
"1","iter  50 value 41.685310
"
"1","iter  60 value 41.591852
"
"1","iter  70 value 41.583016
"
"1","final  value 41.582107 
"
"1","converged
"
