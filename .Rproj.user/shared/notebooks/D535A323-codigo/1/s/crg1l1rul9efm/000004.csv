"0","dataframe.resultados.1neu.soft <- data.frame(Ent_1Neu_soft = numeric(),"
"0","                                             Test_1Neu_soft = numeric())"
"0","for(i in 1:20)"
"0","{"
"0","  pacientes.1neu.softmax <- nnet( matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24], class.ind( matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ) , size=1, softmax = T )"
"0","  #Una vez que lo tengo entrenado, lo que voy a hacer es calcular el error tanto en el entrenamiento como en el test de cada uno"
"0","  "
"0","  pacientes.prediccion.1neu.softmax <- predict( pacientes.1neu.softmax, matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24], type=""raw"" )"
"0","  head(pacientes.prediccion.1neu.softmax) # Vemos las probabilidades de pertenencia de cada valor"
"0","  "
"0","  # Ahora que los tengo todos entrenados, Determinamos cual es la máxima, es decir, la clase a la que hay que asignar los objetos"
"0","  "
"0","  pacientes.prediccion.1neu.class.softmax <- apply( pacientes.prediccion.1neu.softmax, MARGIN=1, FUN='which.is.max')"
"0","  pacientes.prediccion.1neu.class.softmax"
"0","  "
"0","  # Lo visualizo en forma de tabla para ir viendo el error"
"0","  "
"0","  table( pacientes.prediccion.1neu.class.softmax, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] )  # Lo vemos en forma de tabla."
"0","  "
"0","  #Calculo el acierto"
"0","  "
"0","  acierto.ent.teorico.1neu.soft <- sum( diag( table( pacientes.prediccion.1neu.class.softmax, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ) ) )/55 # Esta cuenta nos da el índice de acierto"
"0","  "
"0","  #TEST"
"0","  "
"0","  pacientes.prediccion.test.1neu.softmax <- predict( pacientes.1neu.softmax, matriz.pacientes.datos.centscal[-conjuntoEntrenamiento, 1:24], type=""raw"" )"
"0","  pacientes.prediccion.test.1neu.softmax"
"0","  "
"0","  pacientes.prediccion.test.1neu.class.softmax <- apply( pacientes.prediccion.test.1neu.softmax, MARGIN=1, FUN='which.is.max')"
"0","  pacientes.prediccion.test.1neu.class.softmax"
"0","  "
"0","  table( pacientes.prediccion.test.1neu.class.softmax , matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] )"
"0","  acierto.test.teorico.1neu.soft <- sum( diag( table( pacientes.prediccion.test.1neu.class.softmax, matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] ) ) )/12"
"0","  "
"0","  dataframe.pasada <- data.frame(Ent_1Neu_soft = acierto.ent.teorico.1neu.soft,"
"0","                                 Test_1Neu_soft = acierto.test.teorico.1neu.soft)"
"0","  "
"0","  dataframe.resultados.1neu.soft <- rbind(dataframe.resultados.1neu.soft ,dataframe.pasada)"
"0","  "
"0","}"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 82.627752 
"
"1","iter  10 value 60.339496
"
"1","iter  20 value 47.978526
"
"1","iter  30 value 38.669919
"
"1","iter  40 value 36.750551
"
"1","iter  50 value 36.469154
"
"1","iter  60 value 36.428814
"
"1","iter  70 value 36.421387
"
"1","iter  80 value 36.418085
"
"1","iter  90 value 36.417942
"
"1","iter  90 value 36.417942
"
"1","iter  90 value 36.417941
"
"1","final  value 36.417941 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 88.833128 
"
"1","iter  10 value 53.117541
"
"1","iter  20 value 45.853058
"
"1","iter  30 value 41.878530
"
"1","iter  40 value 40.712835
"
"1","iter  50 value 40.486421
"
"1","iter  60 value 40.454761
"
"1","iter  70 value 40.450847
"
"1","iter  80 value 40.450109
"
"1","final  value 40.449895 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 72.907836 
"
"1","iter  10 value 55.253736
"
"1","iter  20 value 51.831545
"
"1","iter  30 value 49.968782
"
"1","iter  40 value 49.530301
"
"1","iter  50 value 48.665095
"
"1","iter  60 value 48.429085
"
"1","iter  70 value 48.417809
"
"1","final  value 48.415994 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 82.162404 
"
"1","iter  10 value 60.105379
"
"1","iter  20 value 50.745571
"
"1","iter  30 value 49.491246
"
"1","iter  40 value 49.024142
"
"1","iter  50 value 48.982903
"
"1","iter  60 value 48.958263
"
"1","iter  70 value 48.957790
"
"1","final  value 48.957787 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 73.139701 
"
"1","iter  10 value 57.796329
"
"1","iter  20 value 51.935758
"
"1","iter  30 value 51.483047
"
"1","iter  40 value 51.432397
"
"1","iter  50 value 51.431514
"
"1","final  value 51.431513 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 87.258631 
"
"1","iter  10 value 59.684321
"
"1","iter  20 value 55.676498
"
"1","iter  30 value 54.688100
"
"1","iter  40 value 54.677994
"
"1","final  value 54.677940 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 74.159233 
"
"1","iter  10 value 56.401937
"
"1","iter  20 value 51.085020
"
"1","iter  30 value 49.582427
"
"1","iter  40 value 48.740207
"
"1","iter  50 value 48.696628
"
"1","iter  60 value 48.694565
"
"1","final  value 48.694535 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 79.469946 
"
"1","iter  10 value 54.946606
"
"1","iter  20 value 44.832809
"
"1","iter  30 value 34.439685
"
"1","iter  40 value 30.620906
"
"1","iter  50 value 28.903401
"
"1","iter  60 value 28.514169
"
"1","iter  70 value 28.264373
"
"1","iter  80 value 28.243716
"
"1","iter  90 value 28.236792
"
"1","iter 100 value 28.234537
"
"1","final  value 28.234537 
"
"1","stopped after 100 iterations
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 77.708969 
"
"1","iter  10 value 51.379070
"
"1","iter  20 value 47.256465
"
"1","iter  30 value 46.380192
"
"1","iter  40 value 46.082490
"
"1","iter  50 value 45.635376
"
"1","iter  60 value 45.482862
"
"1","iter  70 value 45.369692
"
"1","iter  80 value 45.359441
"
"1","iter  90 value 45.355925
"
"1","iter 100 value 45.351618
"
"1","final  value 45.351618 
"
"1","stopped after 100 iterations
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 77.594964 
"
"1","iter  10 value 57.730728
"
"1","iter  20 value 53.025176
"
"1","iter  30 value 50.332460
"
"1","iter  40 value 46.854713
"
"1","iter  50 value 45.923985
"
"1","iter  60 value 45.665674
"
"1","iter  70 value 45.295475
"
"1","iter  80 value 45.286916
"
"1","final  value 45.286657 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 74.503513 
"
"1","iter  10 value 63.156014
"
"1","iter  20 value 58.276291
"
"1","iter  30 value 53.402765
"
"1","iter  40 value 51.934377
"
"1","iter  50 value 46.919667
"
"1","iter  60 value 44.822348
"
"1","iter  70 value 43.978720
"
"1","iter  80 value 43.833930
"
"1","iter  90 value 43.825265
"
"1","iter 100 value 43.502328
"
"1","final  value 43.502328 
"
"1","stopped after 100 iterations
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 84.256902 
"
"1","iter  10 value 64.776991
"
"1","iter  20 value 61.616513
"
"1","iter  30 value 61.504885
"
"1","iter  40 value 61.504291
"
"1","final  value 61.504290 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 75.868439 
"
"1","iter  10 value 54.504743
"
"1","iter  20 value 46.570825
"
"1","iter  30 value 41.346062
"
"1","iter  40 value 40.385663
"
"1","iter  50 value 40.041931
"
"1","iter  60 value 39.958348
"
"1","iter  70 value 39.940179
"
"1","iter  80 value 39.939423
"
"1","iter  90 value 39.939170
"
"1","final  value 39.939169 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 72.572622 
"
"1","iter  10 value 56.646604
"
"1","iter  20 value 53.804022
"
"1","iter  30 value 53.077576
"
"1","iter  40 value 53.011890
"
"1","iter  50 value 53.003612
"
"1","iter  60 value 53.002494
"
"1","final  value 53.002386 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 76.069218 
"
"1","iter  10 value 53.537978
"
"1","iter  20 value 50.278922
"
"1","iter  30 value 48.697305
"
"1","iter  40 value 48.642225
"
"1","iter  50 value 48.631480
"
"1","final  value 48.631403 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 80.901895 
"
"1","iter  10 value 52.364411
"
"1","iter  20 value 49.007156
"
"1","iter  30 value 47.427285
"
"1","iter  40 value 47.042791
"
"1","iter  50 value 46.979091
"
"1","iter  60 value 46.975353
"
"1","iter  70 value 46.972206
"
"1","iter  80 value 46.971795
"
"1","final  value 46.971749 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 73.406055 
"
"1","iter  10 value 63.499384
"
"1","iter  20 value 58.401600
"
"1","iter  30 value 58.260635
"
"1","iter  40 value 58.257665
"
"1","iter  50 value 58.257179
"
"1","iter  50 value 58.257179
"
"1","iter  50 value 58.257179
"
"1","final  value 58.257179 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 75.482749 
"
"1","iter  10 value 53.178472
"
"1","iter  20 value 44.766350
"
"1","iter  30 value 42.027662
"
"1","iter  40 value 41.218224
"
"1","iter  50 value 41.099707
"
"1","iter  60 value 41.082085
"
"1","iter  70 value 41.080372
"
"1","iter  80 value 41.079915
"
"1","final  value 41.079821 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 79.413903 
"
"1","iter  10 value 53.391263
"
"1","iter  20 value 50.949534
"
"1","iter  30 value 49.247054
"
"1","iter  40 value 48.316712
"
"1","iter  50 value 48.173338
"
"1","iter  60 value 48.054719
"
"1","iter  70 value 48.051720
"
"1","iter  80 value 48.051658
"
"1","final  value 48.051655 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 74.307380 
"
"1","iter  10 value 54.901483
"
"1","iter  20 value 50.561016
"
"1","iter  30 value 49.708437
"
"1","iter  40 value 49.590587
"
"1","iter  50 value 49.584488
"
"1","iter  60 value 49.584309
"
"1","iter  60 value 49.584308
"
"1","iter  60 value 49.584308
"
"1","final  value 49.584308 
"
"1","converged
"
