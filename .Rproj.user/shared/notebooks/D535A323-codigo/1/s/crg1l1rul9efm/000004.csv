"0","set.seed(1)"
"0","dataframe.resultados.1neu.soft <- data.frame(Ent_1Neu_soft = numeric(),"
"0","                                             Test_1Neu_soft = numeric())"
"0","for(i in 1:20)"
"0","{"
"0","  pacientes.1neu.softmax <- nnet( matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24], class.ind( matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ) , size=1, softmax = T )"
"0","  #Una vez que lo tengo entrenado, lo que voy a hacer es calcular el error tanto en el entrenamiento como en el test de cada uno"
"0","  "
"0","  pacientes.prediccion.1neu.softmax <- predict( pacientes.1neu.softmax, matriz.pacientes.datos.centscal[conjuntoEntrenamiento, 1:24], type=""raw"" )"
"0","  head(pacientes.prediccion.1neu.softmax) # Vemos las probabilidades de pertenencia de cada valor"
"0","  "
"0","  # Ahora que los tengo todos entrenados, Determinamos cual es la máxima, es decir, la clase a la que hay que asignar los objetos"
"0","  "
"0","  pacientes.prediccion.1neu.class.softmax <- apply( pacientes.prediccion.1neu.softmax, MARGIN=1, FUN='which.is.max')"
"0","  pacientes.prediccion.1neu.class.softmax"
"0","  "
"0","  # Lo visualizo en forma de tabla para ir viendo el error"
"0","  "
"0","  table( pacientes.prediccion.1neu.class.softmax, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] )  # Lo vemos en forma de tabla."
"0","  "
"0","  #Calculo el acierto"
"0","  "
"0","  acierto.ent.teorico.1neu.soft <- sum( diag( table( pacientes.prediccion.1neu.class.softmax, matriz.pacientes.etiquetas[conjuntoEntrenamiento, 25] ) ) )/55 # Esta cuenta nos da el índice de acierto"
"0","  "
"0","  #TEST"
"0","  "
"0","  pacientes.prediccion.test.1neu.softmax <- predict( pacientes.1neu.softmax, matriz.pacientes.datos.centscal[-conjuntoEntrenamiento, 1:24], type=""raw"" )"
"0","  pacientes.prediccion.test.1neu.softmax"
"0","  "
"0","  pacientes.prediccion.test.1neu.class.softmax <- apply( pacientes.prediccion.test.1neu.softmax, MARGIN=1, FUN='which.is.max')"
"0","  pacientes.prediccion.test.1neu.class.softmax"
"0","  "
"0","  table( pacientes.prediccion.test.1neu.class.softmax , matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] )"
"0","  acierto.test.teorico.1neu.soft <- sum( diag( table( pacientes.prediccion.test.1neu.class.softmax, matriz.pacientes.etiquetas[-conjuntoEntrenamiento, 25] ) ) )/12"
"0","  "
"0","  dataframe.pasada <- data.frame(Ent_1Neu_soft = acierto.ent.teorico.1neu.soft,"
"0","                                 Test_1Neu_soft = acierto.test.teorico.1neu.soft)"
"0","  "
"0","  dataframe.resultados.1neu.soft <- rbind(dataframe.resultados.1neu.soft ,dataframe.pasada)"
"0","  "
"0","}"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 74.254373 
"
"1","iter  10 value 47.340644
"
"1","iter  20 value 41.709241
"
"1","iter  30 value 39.972235
"
"1","iter  40 value 39.701906
"
"1","iter  50 value 39.669670
"
"1","iter  60 value 39.665502
"
"1","iter  70 value 39.665114
"
"1","iter  80 value 39.664918
"
"1","final  value 39.664909 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 71.778765 
"
"1","iter  10 value 56.239160
"
"1","iter  20 value 53.106879
"
"1","iter  30 value 52.106151
"
"1","iter  40 value 51.773760
"
"1","iter  50 value 51.714249
"
"1","iter  60 value 51.703800
"
"1","iter  70 value 51.701824
"
"1","final  value 51.701816 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 78.818781 
"
"1","iter  10 value 53.579740
"
"1","iter  20 value 45.923302
"
"1","iter  30 value 37.200372
"
"1","iter  40 value 32.904917
"
"1","iter  50 value 32.464097
"
"1","iter  60 value 32.404757
"
"1","iter  70 value 32.381123
"
"1","iter  80 value 32.379484
"
"1","final  value 32.379477 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 76.673291 
"
"1","iter  10 value 56.506841
"
"1","iter  20 value 51.649728
"
"1","iter  30 value 50.186064
"
"1","iter  40 value 49.989866
"
"1","iter  50 value 49.957977
"
"1","iter  60 value 49.953535
"
"1","final  value 49.952960 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 97.390845 
"
"1","iter  10 value 53.923567
"
"1","iter  20 value 45.321763
"
"1","iter  30 value 41.395939
"
"1","iter  40 value 40.813574
"
"1","iter  50 value 40.736342
"
"1","iter  60 value 40.726159
"
"1","iter  70 value 40.723863
"
"1","iter  80 value 40.722829
"
"1","final  value 40.722542 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 75.674062 
"
"1","iter  10 value 49.265927
"
"1","iter  20 value 47.067668
"
"1","iter  30 value 47.007698
"
"1","iter  40 value 47.004960
"
"1","final  value 47.004915 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 78.084729 
"
"1","iter  10 value 61.446138
"
"1","iter  20 value 56.647425
"
"1","iter  30 value 56.408526
"
"1","iter  40 value 56.405920
"
"1","iter  50 value 56.405528
"
"1","final  value 56.405525 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 75.411560 
"
"1","iter  10 value 49.720551
"
"1","iter  20 value 46.635041
"
"1","iter  30 value 45.446695
"
"1","iter  40 value 45.414995
"
"1","iter  50 value 45.403434
"
"1","iter  60 value 45.387616
"
"1","iter  70 value 45.363786
"
"1","iter  80 value 45.357612
"
"1","iter  90 value 45.332594
"
"1","iter 100 value 45.328904
"
"1","final  value 45.328904 
"
"1","stopped after 100 iterations
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 75.641977 
"
"1","iter  10 value 47.243173
"
"1","iter  20 value 46.252239
"
"1","iter  30 value 46.248133
"
"1","final  value 46.248129 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 76.701374 
"
"1","iter  10 value 63.542939
"
"1","iter  20 value 51.555027
"
"1","iter  30 value 48.233649
"
"1","iter  40 value 47.221997
"
"1","iter  50 value 47.130574
"
"1","iter  60 value 47.119033
"
"1","iter  70 value 47.117634
"
"1","final  value 47.117610 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 76.582077 
"
"1","iter  10 value 64.015018
"
"1","iter  20 value 57.894698
"
"1","iter  30 value 56.258000
"
"1","iter  40 value 55.923857
"
"1","iter  50 value 55.888370
"
"1","iter  60 value 55.883427
"
"1","iter  70 value 55.883062
"
"1","iter  80 value 55.882840
"
"1","iter  90 value 55.882675
"
"1","final  value 55.882670 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 92.650261 
"
"1","iter  10 value 49.192344
"
"1","iter  20 value 41.613068
"
"1","iter  30 value 33.961728
"
"1","iter  40 value 31.306507
"
"1","iter  50 value 30.872014
"
"1","iter  60 value 30.783271
"
"1","iter  70 value 30.767095
"
"1","iter  80 value 30.767012
"
"1","iter  90 value 30.766124
"
"1","iter 100 value 30.765769
"
"1","final  value 30.765769 
"
"1","stopped after 100 iterations
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 89.683411 
"
"1","iter  10 value 53.557117
"
"1","iter  20 value 44.177560
"
"1","iter  30 value 41.190790
"
"1","iter  40 value 40.778043
"
"1","iter  50 value 40.729220
"
"1","iter  60 value 40.722926
"
"1","iter  70 value 40.722350
"
"1","iter  80 value 40.722013
"
"1","iter  90 value 40.721900
"
"1","final  value 40.721852 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 72.639859 
"
"1","iter  10 value 48.432059
"
"1","iter  20 value 46.211567
"
"1","iter  30 value 46.039207
"
"1","iter  40 value 46.038647
"
"1","iter  40 value 46.038647
"
"1","iter  40 value 46.038647
"
"1","final  value 46.038647 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 95.918688 
"
"1","iter  10 value 57.708658
"
"1","iter  20 value 48.058448
"
"1","iter  30 value 45.024433
"
"1","iter  40 value 42.520924
"
"1","iter  50 value 41.708382
"
"1","iter  60 value 41.574892
"
"1","iter  70 value 41.541167
"
"1","iter  80 value 41.538929
"
"1","iter  90 value 41.538314
"
"1","iter 100 value 41.538109
"
"1","final  value 41.538109 
"
"1","stopped after 100 iterations
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 89.910427 
"
"1","iter  10 value 54.066174
"
"1","iter  20 value 44.134502
"
"1","iter  30 value 42.232139
"
"1","iter  40 value 41.149323
"
"1","iter  50 value 40.906848
"
"1","iter  60 value 40.870760
"
"1","iter  70 value 40.866428
"
"1","iter  80 value 40.865082
"
"1","final  value 40.865080 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 88.496938 
"
"1","iter  10 value 58.588863
"
"1","iter  20 value 49.439514
"
"1","iter  30 value 45.120046
"
"1","iter  40 value 43.313149
"
"1","iter  50 value 42.744920
"
"1","iter  60 value 42.608114
"
"1","iter  70 value 42.579857
"
"1","iter  80 value 42.577526
"
"1","final  value 42.577521 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 78.046623 
"
"1","iter  10 value 63.600011
"
"1","iter  20 value 50.783463
"
"1","iter  30 value 45.923950
"
"1","iter  40 value 43.200852
"
"1","iter  50 value 42.448049
"
"1","iter  60 value 42.400052
"
"1","iter  70 value 42.386600
"
"1","iter  80 value 42.384361
"
"1","iter  90 value 42.383850
"
"1","final  value 42.383849 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 76.488597 
"
"1","iter  10 value 53.008195
"
"1","iter  20 value 46.154794
"
"1","iter  30 value 45.141402
"
"1","iter  40 value 44.825535
"
"1","iter  50 value 44.777560
"
"1","iter  60 value 44.767880
"
"1","iter  70 value 44.765337
"
"1","iter  80 value 44.765165
"
"1","final  value 44.764859 
"
"1","converged
"
"1","# weights: "
"1"," "
"1","33"
"1","
"
"1","initial  value 81.411775 
"
"1","iter  10 value 51.980333
"
"1","iter  20 value 47.798616
"
"1","iter  30 value 45.917365
"
"1","iter  40 value 44.589466
"
"1","iter  50 value 44.318135
"
"1","iter  60 value 44.233352
"
"1","iter  70 value 44.199560
"
"1","iter  80 value 44.198534
"
"1","final  value 44.198491 
"
"1","converged
"
